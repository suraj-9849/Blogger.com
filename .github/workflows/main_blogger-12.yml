# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Frontend to Azure Web App - blogger-12

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'  # Only trigger on frontend changes
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'  # Using LTS version for better stability

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies and build
        working-directory: ./frontend
        run: |
          pnpm install --no-frozen-lockfile
          pnpm run build

      - name: Prepare deployment package
        run: |
          # Create a temporary directory for packaging
          mkdir -p deploy_package
          
          # Copy build output
          cp -r frontend/dist/* deploy_package/
          
          # Copy configuration files
          cp frontend/web.config deploy_package/
          cp frontend/startup.sh deploy_package/
          chmod +x deploy_package/startup.sh
          
          # Create a minimal package.json for deployment
          echo '{
            "name": "blogger-frontend",
            "version": "1.0.0",
            "engines": {
              "node": ">=20.0.0"
            },
            "scripts": {
              "start": "./startup.sh"
            },
            "dependencies": {
              "serve": "^14.2.1"
            }
          }' > deploy_package/package.json
          
          # Create zip from the deploy package
          cd deploy_package
          zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: frontend-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: frontend-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F6C6BF64D12E40DF8E09590A747F7F70 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_98294AE2BAE14BA5819C92FE6CD85799 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_DB67BD5BF92C4A33868BED3D2FCFCE58 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'blogger-12'
          slot-name: 'Production'
          package: .
          startup-command: './startup.sh'
          